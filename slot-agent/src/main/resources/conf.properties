# 埋点信息输出相关
# 埋点数据输出模式，仅支持 console,csv
# 不建议修改
slot.output.mode=csv

# 埋点数据输出路径
#slot.output.file.path=f:/slot/data
slot.output.file.path=/tmp/slot/data

# 埋点输出输出周期，决定了输出的文件名中的时间周期
slot.output.cycle=5
# 时间单位 SECONDS,MINUTES,HOURS,DAYS，决定了输出的文件名中的时间周期
slot.output.cycle.unit=MINUTES

# 埋点输出文件重命名周期延迟的秒数
slot.output.rename.cycle.delay=5

# 埋点开关文件所在位置
#slot.output.switch.prop.file.path=f:/slot/switch/switch.properties
slot.output.switch.prop.file.path=/tmp/slot/switch/switch.properties

# 检查埋点开关文件周期间隔
slot.output.switch.check.cycle=5
slot.output.switch.check.cycle.unit=SECONDS

# 埋点输出文件保存的周期
# 请根据服务器磁盘大小确定
slot.output.file.expire.cycle=1
slot.output.file.expire.cycle.unit=DAYS

# disruptor 消费 span 数据的缓冲区大小，代表缓冲多少条之后输出
# 根据 JVM 的内存来确定，如果 JVM 较大，那么可以将此值调大
slot.disruptor.consumer.cache.size=100

# disruptor ring buffer 大小，必须为2的n次幂，可根据机器性能调整此值大小
# 根据 JVM 的内存来确定，如果 JVM 较大，那么可以将此值调大
slot.disruptor.ring.buffer.size=16384

# disruptor 的等待策略，默认为 blocking
# 枚举值有:blocking,sleeping,lite_blocking,yielding,busy_spin
slot.disruptor.consumer.wait.strategy=blocking

# disruptor 的消费者数量，消费者越多埋点数据消费越快，消费者越多 CPU 利用率也就越高
# 小于等于0的值表示默认为当前服务器可用核心数的两倍，任意大于0的值表示消费者数量
slot.disruptor.consumer.count=0

# 埋点需要排除的方法名，使用 ',' 分割
slot.exclude.method.name=toString,hashCode,equals,clone,canEqual
# 埋点需要排除的方法名前缀，使用 ',' 分割
slot.exclude.method.prefix=set,get,is

# traceId 和 spanId 生成器相关配置
slot.generator.worker.id=1
slot.generator.data.center.id=1